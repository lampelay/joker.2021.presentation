

Рабочее название доклада звучит как
Shaken, not stirred - bunch of distributed teams in the single Spring Context

300+ - teams 
50+ - microservices

// TODO
- Саша со своей стороны посмотрит презенташки - которые воткнули уровнем предоставления инфо
- Что и как мы можем выносить наружу (Протокол WorkFlow) - после полного текста презентации просто самим вычитать и смотреть
- Найти контакты через кого кидаем на JPoint - DONE
- Найти категорию (тема) в которой рассказывать на JPoint - 
	Operations:
	Опыт эксплуатации и сопровождения больших систем на Java
-  



Примеры презентаций
Creating Groovy DSLs that Developers Can Actually Use
https://www.infoq.com/presentations/groovy-dsl-mars/



1. Микросервисы для бизнеса подключаются через отдельные Spring Beans
-- на стороне бизнеес-приложения это клиентское????? взаимодействие
-- клиентское взаимодействие через HTTP (как правило), или TCP (немного)

2. Каждый микросервис предоставляет одна команда

3. Какие ключевые моменты увеличивали хаос
выравнивать всех более 50 команд,
разная скорость релизов,
команды географически распределны 
в разных часовых поясах
нужно подключать
???
???
- оправдание КМов? нудно много подробностей!!!
- прийти за историей к Саше Абросимову, Денису
- КМы элементарная инфраструктурная транспортная логика и она единообразна и не нужна на уровне бизнес приложения


3. Когда не было выравнивания с какимим проблемами столкнулись
-- не стартует Spring Context
-- коллизия по именам бинов
-- минимальное количество тестов????
-- Бизнесовым командам требуется подключать N зависимостей и отслеживать их изменение номеров версий
-- Несколько версий в проде
-- несколько каналов и т.п.
-- 



// TODO  Саша напиши историю
- рассказать историю и последовательностей шагов, как пришли к первому решению




4. Первый подход к снаряду
Pros
-- выделена отдельная команда
-- организовывала и синхронизировала остальные микросервисные команды
-- получали надлежащее качество - КМов
-- появился pom bom - бизнес команда подключает единственную зависимость, не парится с пачкой
-- бизнесовые команды привыкли и приняли удобство подключения
-- выкрестализовывание примера для бизнес команд
-- ???
-- ???

Cons
-- долгий процесс пинания команд, каждая в своем релизном цикле, рассинхрон
-- необязательность и не требуемая????
-- появилась иллюзия, что эта команда полностью отвечает за поставку ане команда ТСов
-- разруливание в полуручном режиме коллизий, сведенеие нескольких команд в одном диалоге
-- команда КМа явно не видит проблем и коллизий!!
-- ??



5. Описать новый подход - Blinding Lights
-- Чтобы команда микросевиса попала, а бизнесу предоставляется pom bom
